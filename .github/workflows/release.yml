name: Create release

on:
  push:
    tags:
      - '*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Read version
        id: version
        run: echo "version=$(cat internal/version/VERSION)" >> $GITHUB_OUTPUT

      - name: Run tests
        run: go test -v ./...

      - name: Build binaries
        run: |
          # Get git info
          GIT_COMMIT=$(git rev-parse --short HEAD)
          BUILD_DATE=$(date -u +"%Y-%m-%d %H:%M:%S")
          LDFLAGS="-X github.com/pgschema/pgschema/cmd.GitCommit=${GIT_COMMIT} -X 'github.com/pgschema/pgschema/cmd.BuildDate=${BUILD_DATE}'"
          
          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o pgschema-linux-amd64 .

      - name: Create release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
        with:
          # go install requires tags to be prefixed with v. 
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          generate_release_notes: true
          files: |
            pgschema-linux-amd64
