{
  "version": "1.0.0",
  "pgschema_version": "1.0.0",
  "created_at": "2025-08-15T19:52:25+08:00",
  "source_fingerprint": {
    "hash": "965b1131737c955e24c7f827c55bd78e4cb49a75adfd04229e0ba297376f5085"
  },
  "groups": [
    {
      "steps": [
        {
          "statements": [
            {
              "sql": "CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name text NOT NULL,\n    email text UNIQUE,\n    created_at timestamp DEFAULT CURRENT_TIMESTAMP,\n    updated_at timestamp DEFAULT CURRENT_TIMESTAMP\n)",
              "can_run_in_transaction": true
            }
          ],
          "type": "table",
          "operation": "create",
          "path": "public.users",
          "source": {
            "schema": "public",
            "name": "users",
            "type": "BASE_TABLE",
            "columns": [
              {
                "name": "id",
                "position": 1,
                "data_type": "integer",
                "is_nullable": false,
                "default_value": "nextval('users_id_seq'::regclass)"
              },
              {
                "name": "name",
                "position": 2,
                "data_type": "text",
                "is_nullable": false
              },
              {
                "name": "email",
                "position": 3,
                "data_type": "text",
                "is_nullable": true
              },
              {
                "name": "created_at",
                "position": 4,
                "data_type": "timestamp",
                "is_nullable": true,
                "default_value": "CURRENT_TIMESTAMP"
              },
              {
                "name": "updated_at",
                "position": 5,
                "data_type": "timestamp",
                "is_nullable": true,
                "default_value": "CURRENT_TIMESTAMP"
              }
            ],
            "constraints": {
              "users_email_key": {
                "schema": "public",
                "table": "users",
                "name": "users_email_key",
                "type": "UNIQUE",
                "columns": [
                  {
                    "name": "email",
                    "position": 1
                  }
                ]
              },
              "users_pkey": {
                "schema": "public",
                "table": "users",
                "name": "users_pkey",
                "type": "PRIMARY_KEY",
                "columns": [
                  {
                    "name": "id",
                    "position": 1
                  }
                ]
              }
            },
            "indexes": {},
            "triggers": {
              "update_users_modified_time": {
                "schema": "public",
                "table": "users",
                "name": "update_users_modified_time",
                "timing": "BEFORE",
                "events": [
                  "UPDATE"
                ],
                "level": "ROW",
                "function": "update_modified_time()"
              }
            },
            "rls_enabled": false,
            "policies": {},
            "dependencies": null,
            "is_partitioned": false
          }
        },
        {
          "statements": [
            {
              "sql": "CREATE OR REPLACE FUNCTION update_modified_time()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY INVOKER\nVOLATILE\nAS $$\nBEGIN\n    NEW.updated_at = CURRENT_TIMESTAMP;\n    RETURN NEW;\nEND;\n$$",
              "can_run_in_transaction": true
            }
          ],
          "type": "function",
          "operation": "create",
          "path": "public.update_modified_time",
          "source": {
            "schema": "public",
            "name": "update_modified_time",
            "definition": "\nBEGIN\n    NEW.updated_at = CURRENT_TIMESTAMP;\n    RETURN NEW;\nEND;\n",
            "return_type": "trigger",
            "language": "plpgsql",
            "volatility": "VOLATILE"
          }
        },
        {
          "statements": [
            {
              "sql": "CREATE OR REPLACE TRIGGER update_users_modified_time\n    BEFORE UPDATE ON users\n    FOR EACH ROW\n    EXECUTE FUNCTION update_modified_time()",
              "can_run_in_transaction": true
            }
          ],
          "type": "table.trigger",
          "operation": "create",
          "path": "public.users.update_users_modified_time",
          "source": {
            "schema": "public",
            "table": "users",
            "name": "update_users_modified_time",
            "timing": "BEFORE",
            "events": [
              "UPDATE"
            ],
            "level": "ROW",
            "function": "update_modified_time()"
          }
        }
      ]
    }
  ]
}
