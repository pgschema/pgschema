{
  "version": "1.0.0",
  "pgschema_version": "1.4.0",
  "created_at": "1970-01-01T00:00:00Z",
  "source_fingerprint": {
    "hash": "e937536446c155860f69ab4a38fc142791a9a3636ada3e9113057afd9d875190"
  },
  "groups": [
    {
      "steps": [
        {
          "sql": "CREATE OR REPLACE VIEW array_operators_view AS\n SELECT id,\n    priority,\n        CASE\n            WHEN priority = ANY (ARRAY[10, 20, 30]) THEN 'matched'::text\n            ELSE 'not_matched'::text\n        END AS equal_any_test,\n        CASE\n            WHEN priority > ANY (ARRAY[10, 20, 30]) THEN 'high'::text\n            ELSE 'low'::text\n        END AS greater_any_test,\n        CASE\n            WHEN priority < ANY (ARRAY[5, 15, 25]) THEN 'found_lower'::text\n            ELSE 'all_higher'::text\n        END AS less_any_test,\n        CASE\n            WHEN priority <> ANY (ARRAY[1, 2, 3]) THEN 'different'::text\n            ELSE 'same'::text\n        END AS not_equal_any_test\n   FROM employees;",
          "type": "view",
          "operation": "create",
          "path": "public.array_operators_view"
        },
        {
          "sql": "CREATE OR REPLACE VIEW cte_with_case_view AS\n WITH monthly_stats AS (\n         SELECT date_trunc('month'::text, CURRENT_DATE - ((n.n || ' months'::text)::interval)) AS month_start,\n            n.n AS month_offset\n           FROM generate_series(0, 11) n(n)\n        ), employee_summary AS (\n         SELECT employees.department_id,\n            count(*) AS employee_count,\n            avg(employees.priority) AS avg_priority\n           FROM employees\n          WHERE employees.status::text = 'active'::text\n          GROUP BY employees.department_id\n        )\n SELECT ms.month_start,\n    ms.month_offset,\n    d.name AS department_name,\n    COALESCE(es.employee_count, 0::bigint) AS employee_count,\n        CASE\n            WHEN es.avg_priority > 50::numeric THEN 'high'::text\n            WHEN es.avg_priority > 25::numeric THEN 'medium'::text\n            WHEN es.avg_priority IS NOT NULL THEN 'low'::text\n            ELSE 'no_data'::text\n        END AS priority_level,\n        CASE\n            WHEN ms.month_offset = 0 THEN 'current'::text\n            WHEN ms.month_offset <= 3 THEN 'recent'::text\n            ELSE 'historical'::text\n        END AS period_type\n   FROM monthly_stats ms\n     CROSS JOIN departments d\n     LEFT JOIN employee_summary es ON d.id = es.department_id\n  ORDER BY ms.month_start DESC, d.name;",
          "type": "view",
          "operation": "create",
          "path": "public.cte_with_case_view"
        },
        {
          "sql": "CREATE OR REPLACE VIEW nullif_functions_view AS\n SELECT e.id,\n    e.name AS employee_name,\n    d.name AS department_name,\n    (e.priority - d.manager_id) / NULLIF(d.manager_id, 0) AS priority_ratio,\n    NULLIF(e.status::text, 'inactive'::text) AS active_status,\n    NULLIF(e.email::text, ''::text) AS valid_email,\n    GREATEST(e.priority, 0) AS min_priority,\n    LEAST(e.priority, 100) AS max_priority,\n    GREATEST(e.id, d.id, e.department_id) AS max_id,\n        CASE\n            WHEN NULLIF(e.department_id, 0) IS NOT NULL THEN 'assigned'::text\n            ELSE 'unassigned'::text\n        END AS assignment_status\n   FROM employees e\n     JOIN departments d USING (id)\n  WHERE e.priority > 0;",
          "type": "view",
          "operation": "create",
          "path": "public.nullif_functions_view"
        },
        {
          "sql": "CREATE OR REPLACE VIEW text_search_view AS\n SELECT id,\n    COALESCE((first_name::text || ' '::text) || last_name::text, 'Anonymous'::text) AS display_name,\n    COALESCE(email, ''::character varying) AS email,\n    COALESCE(bio, 'No description available'::text) AS description,\n    to_tsvector('english'::regconfig, (((COALESCE(first_name, ''::character varying)::text || ' '::text) || COALESCE(last_name, ''::character varying)::text) || ' '::text) || COALESCE(bio, ''::text)) AS search_vector\n   FROM employees\n  WHERE status::text = 'active'::text;",
          "type": "view",
          "operation": "create",
          "path": "public.text_search_view"
        },
        {
          "sql": "CREATE OR REPLACE VIEW union_subquery_view AS\n SELECT id,\n    name,\n    source_type,\n        CASE\n            WHEN source_type = 'employee'::text THEN 'active'::text\n            WHEN source_type = 'department'::text THEN 'organizational'::text\n            ELSE 'unknown'::text\n        END AS category\n   FROM ((\n                 SELECT employees.id,\n                    employees.name,\n                    'employee'::text AS source_type\n                   FROM employees\n                  WHERE employees.status::text = 'active'::text\n                UNION\n                 SELECT departments.id,\n                    departments.name,\n                    'department'::text AS source_type\n                   FROM departments\n                  WHERE departments.manager_id IS NOT NULL\n        ) UNION ALL\n         SELECT employees.id,\n            COALESCE((employees.first_name::text || ' '::text) || employees.last_name::text, employees.name::text) AS name,\n            'employee_full'::text AS source_type\n           FROM employees\n          WHERE employees.priority > 10) combined_data\n  WHERE id IS NOT NULL\n  ORDER BY source_type, id;",
          "type": "view",
          "operation": "create",
          "path": "public.union_subquery_view"
        }
      ]
    }
  ]
}
